{\rtf1\ansi\deff0
{\fonttbl{\f2\fnil\fcharset0 Courier New;}
{\f1\fnil\fcharset0 Arial;}
{\f0\fnil\fcharset0 Times New Roman;}
}
{\colortbl;\red255\green0\blue0;}{\stylesheet{\s1 Heading 1;}{\s2 Heading 2;}{\s3 Heading 3;}{\s4 Heading 4;}{\s5 Heading 5;}{\s6 Heading 6;}{\s7 Heading 7;}{\s8 Heading 8;}{\s9 Heading 9;}}
\deflang1024\notabind\facingp\hyphauto1\widowctrl
\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}\pard\sl20 {\*\bkmkstart ID_GNUEMODULEGUIDE}{\*\bkmkend ID_GNUEMODULEGUIDE}\fs20 \hyphpar0\par\pard\sb373\s1\sl647\qc \b\fs49\f1 GNU Enterprise - Module Guide Proposal\keepn\hyphpar0\par\pard\sl260 \b0\fs20\f0 \~\hyphpar0\par\pard\sb796\sl449\qc \b\fs34\f1 Reinhard M\'fcller\keepn\hyphpar0\par\pard\sl260\qc \fs24 GNU: Enterprise Core Development Team\hyphpar0\par\pard\sb216\sl449\qc \fs34 Neil Tiffin\keepn\hyphpar0\par\pard\sl260\qc \fs24 GNU: Enterprise Core Development Team\hyphpar0\par\pard\sb1296\sl312\qc Edited by\keepn\hyphpar0\par\pard\sl449\qc \fs34 Derek Neighbors\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}\pard\sl20 \fs20 \keepn\hyphpar0\par\pard\sl-240 \b\f1 GNU Enterprise - Module Guide Proposal\hyphpar0\par\pard\sl260 \b0\f0 by\~Reinhard M\'fcller and Neil Tiffin\hyphpar0\par\pard\sb260\sl260 by\~\hyphpar0\par\pard\sl260 Edited by\~Derek Neighbors\hyphpar0\par\pard\sb260\sl260 Published Tue May 23 12:30:23 MST 2000\hyphpar0\par\pard\sl260 Copyright\~\'a9\~2000 by Free Software Foundation\hyphpar0\par\pard\sb200\sl260 \fs16 Copyright (c) 2000 Free Software Foundation\hyphpar0\par\pard\sl260 Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.1 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts and with no Back-Cover Texts. A copy of the license is included in the section entitled "GNU Free Documentation License".\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgnlcrm{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 \b\fs41\f1 Table of Contents\keepn\hyphpar0\par\pard\sb83\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_MODULES}{\fldrslt \fs20\f0 1. GNUe Module Proposal}}\fs20\f0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_MODULES}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_MODULES}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _40 }{\fldrslt \b0 1.1. Introduction}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _40 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _40}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _43 }{\fldrslt 1.1.1. What is this document intended for?}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _43 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _43}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _48 }{\fldrslt 1.1.2. General Structure of GNUe Modules}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _48 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _48}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _68 }{\fldrslt 1.2. Table Design}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _68 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _68}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _72 }{\fldrslt 1.2.1. Naming Conventions}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _72 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _72}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _101 }{\fldrslt 1.2.2. Package Names}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _101 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _101}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _133 }{\fldrslt 1.2.3. Data Modeling Rules}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _133 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _133}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _267 }{\fldrslt 1.2.4. Data Types}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _267 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _267}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _287 }{\fldrslt 1.2.5. Storing Redundant Data}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _287 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _287}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _293 }{\fldrslt 1.3. Form Design}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _293 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _293}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _296 }{\fldrslt 1.4. Report Design}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _296 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _296}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_BUSINESSOBJECTS}{\fldrslt \b 2. GNUe Business Objects}}\b \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_BUSINESSOBJECTS}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_BUSINESSOBJECTS}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _301 }{\fldrslt \b0 2.1. Introduction}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _301 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _301}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_BUSINESSOBJECT}{\fldrslt 2.1.1. Business Objects}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_BUSINESSOBJECT}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_BUSINESSOBJECT}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_NAMINGCONVENTIONS}{\fldrslt 2.1.2. Naming Conventions}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_NAMINGCONVENTIONS}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_NAMINGCONVENTIONS}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_CODINGCONVENTIONS}{\fldrslt 2.1.3. Coding Conventions}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_CODINGCONVENTIONS}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_CODINGCONVENTIONS}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _368 }{\fldrslt 2.2. GNUe Class Files}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _368 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _368}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_MODULESCLASSES}{\fldrslt 2.2.1. MODULES and CLASSES}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_MODULESCLASSES}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_MODULESCLASSES}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_EXTEND}{\fldrslt 2.2.2. EXTEND}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_EXTEND}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_EXTEND}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_FIELDS}{\fldrslt 2.2.3. Fields}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_FIELDS}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_FIELDS}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_TYPECOMPLEX}{\fldrslt 2.2.4. TYPE (Complex Fields)}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_TYPECOMPLEX}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_TYPECOMPLEX}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_TYPEDEF}{\fldrslt 2.2.5. TYPE (Typedef) (NOT IMPLEMENTED YET)}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_TYPEDEF}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_TYPEDEF}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_COMMENT}{\fldrslt 2.2.6. Comments}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_COMMENT}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_COMMENT}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_INCLUDE}{\fldrslt 2.2.7. Include}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_INCLUDE}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_INCLUDE}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_ORDERBY}{\fldrslt 2.2.8. ORDER BY}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_ORDERBY}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_ORDERBY}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_LOOKUP}{\fldrslt 2.2.9. LOOKUP}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_LOOKUP}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_LOOKUP}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_REFERENCE}{\fldrslt 2.2.10. REFERENCE}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_REFERENCE}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_REFERENCE}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_LIST}{\fldrslt 2.2.11. LIST}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_LIST}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_LIST}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_METHOD}{\fldrslt 2.2.12. METHOD}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_METHOD}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_METHOD}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_INHERITANCE}{\fldrslt 2.2.13. Inheritance}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_INHERITANCE}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_INHERITANCE}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_APPENDIXES}{\fldrslt \b I. Appendixes}}\b \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_APPENDIXES}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_APPENDIXES}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _535 }{\fldrslt \b0 A. GNU General Public License}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _535 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _535}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _538 }{\fldrslt B. GNU Free Documentation License}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _538 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _538}{\fldrslt 000}}}}\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgnlcrm{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 \b\fs41\f1 List of Tables\keepn\hyphpar0\par\pard\sb83\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _52 }{\fldrslt \b0\fs20\f0 1-1. Module Structure}}\b0\fs20\f0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l _52 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _52}{\fldrslt 000}}}}\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\pgnrestart\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 1. GNUe Module Proposal}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 1. GNUe Module Proposal}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_MODULES}{\*\bkmkend ID_MODULES}\b\fs41\f1 Chapter 1. GNUe Module Proposal\keepn\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart _40}{\*\bkmkend _40}\fs34 1.1. Introduction\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _43}{\*\bkmkend _43}\b\fs28\lang1024\f1 1.1.1. What is this document intended for?\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 This document shows some of the ideas I would suggest for Gnu Enterprise and I would like to have them discussed. \hyphpar0\par\pard\sb400\li960\sl260 I plan to take other concepts discussed in the mailing list (and widely accepted) into this document, so that maybe this document will somewhen be merged together with others (e.g. An Introduction for Developers from James S. Thompson) and become the Gnu Enterprise Module Writer's Guide. \hyphpar0\par\pard\sb400\li960\sl260 Comments about what should be changed in this document (and what is even missing) are very appreciated, because every comment possibly reflects on future versions of this document and therefore will make the final document better. \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _48}{\*\bkmkend _48}\b\fs28\lang1024\f1 1.1.2. General Structure of GNUe Modules\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Generally speaking, all GNUe Modules share the following structure: (note that this drawing shows the parts a GNUe Module consists of, not the way how these parts interact with each other) \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 +--------------------+-----------+\sa0\par\fi0\sb0
!                    !           !\sa0\par\fi0\sb0
!    Components      !           !\sa0\par\fi0\sb0
!                    !           !\sa0\par\fi0\sb0
+--------------------+  Reports  !\sa0\par\fi0\sb0
!                    !           !\sa0\par\fi0\sb0
!  Business Objects  !           !\sa0\par\fi0\sb0
!                    !           !\sa0\par\fi0\sb0
+--------------------+-----------+\sa0\par\fi0\sb0
!                                !\sa0\par\fi0\sb0
!        Table Definitions       !\sa0\par\fi0\sb0
!                                !\sa0\par\fi0\sb0
+--------------------------------+\sa0\par\fi0\sb0
  \hyphpar0\par\pard\sb200\li960\sl260 {\*\bkmkstart _52}{\*\bkmkend _52}\b\fs20\f0 Table 1-1. Module Structure\sa100\keepn\par\trowd\trleft960 \clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx5160\clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx9360 \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20  Table Definitions \sa60\cell \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20 In GNUe, Data is held mainly in a RDBMS. Each module that will bring new persistent data into the system will probably add some table definitions by defining new tables and/or adding columns to existing tables. Of course it is possible to have modules not expanding table definitions, although that would be rather unlikely. \sa60\cell \row \trowd\trleft960 \clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx5160\clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx9360 \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20  Business Objects \sa60\cell \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20 Most modules will add business objects; this is the part where the business logic lies. Business objects do not necessarily represent (or encapsulate) underlying data structures; there could also be business objects only providing some functionality in between other objects, e.g. generating purchase orders out of analyzing current stock and past sales figures (correct me: or would that be an application?). \sa60\cell \row \trowd\trleft960 \clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx5160\clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx9360 \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20  Components \sa60\cell \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20 Components can provide an interface between the business objects and the user or even other processes and programs. Also Forms and other necessary items are considered components. A module can be one giant component or several components. (This really needs to be better explained. :)) (Derek: I agree :) - Reinhard) \sa60\cell \row \trowd\trleft960 \clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx5160\clvertalt\clbrdrt\brdrs\brdrw20\clbrdrb\brdrs\brdrw20\clbrdrl\brdrs\brdrw20\clbrdrr\brdrs\brdrw20\cellx9360 \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20  Reports \sa60\cell \plain \pard\intbl\sb60\li100\ri100\sl260 \fs20 Generating reports from the underlying data is done using GNUe Reports. First versions of GNUe Reports will probably take their data directly out of the database. However, there are plans to make GNUe Reports communicate with the business objects / GEDI instead of directly with the database. \sa60\cell \row \pard\plain\sl-1\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart _68}{\*\bkmkend _68}\b\fs34\f1 1.2. Table Design\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 In GNUe, all the installed modules will store their data in one database. The following conventions should be considered when table definitions are designed. \hyphpar0\par\pard\sb400\li960\sl260 You should note that most of the GNUe design will be accomplished by the design of business objects. This section really refers to GEAS and how GEAS handles the back end databases. For designing business objects see the next chapter.\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _72}{\*\bkmkend _72}\b\fs28\lang1024\f1 1.2.1. Naming Conventions\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Every GNUe module can add new tables as well as add new columns to existing tables. So it has to be made sure that not two modules use the same name for two different tables, and that not two modules use the same column name in a table for two different purposes. \hyphpar0\par\pard\sb400\li960\sl260 Another purpose for naming conventions is to make it easy for users to recognize intuitively the meaning of the different columns and tables. \hyphpar0\par\pard\sb400\li960\sl260 I would suggest the following naming conventions for tables that are newly created by the module: \hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Every table name consists of a module-name, an underline symbol, and a meaningful class name. The module-name is the same for all new tables a module defines. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 The module-name should be 3 characters or longer, where big and widely-used modules should have shorter names and small and seldom used modules can have longer names. \hyphpar0\par\pard\sb400\li1160\sl260 \lang1033 To ensure uniqueness of module prefixes, they should be coordinated by some central authority at least for standard and extended modules. \hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Modules that belong together somehow should show their relationship by using prefixes with the first some letters being the same. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 The meaningful name should conventionally be singular rather than plural. \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 The naming conventions for columns would be: \hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Columns of a table belonging to the module should have a simple column name. The module-prefix need not be used for such columns. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Columns a module adds to a table belonging to another module must be prefixed by the module-prefix. This is the same prefix that is used for table names. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Column names should be understandable (consider the rules for naming variables in the Gnu Coding Standards). Columns of different tables with the same meaning should have the same name. \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 The following examples should make things clearer: \hyphpar0\par\pard\sb400\li960\sl260 One of the base modules could be a customer management module, used in the G/L as well as for sales order processing or for CRM. This module would probably choose cus as it's module-prefix. \hyphpar0\par\pard\sb400\li960\sl260 So, according to the above conventions, the customer table would be named cus_customer, and the name of the customer would be cus_customer.name. \hyphpar0\par\pard\sb400\li960\sl260 Another widely used module would be the sales order processing module, maybe choosing the prefix sop. The sales order table would be named sop_order and could be easily distinguished from the purchase order tables pop_order of the purchase order processing module pop. The terms of payment for this order would be saved in a column named sop_order.payment. \hyphpar0\par\pard\sb400\li960\sl260 If the designer of the sales order processing module would choose to extend the customer table to store the default terms of payment for a given customer, the resulting column would be named cus_customer.sop_payment. Thus, this column can be easily identified as being a ``cuckoo's egg''. \hyphpar0\par\pard\sb400\li960\sl260 Another module, the famous local car dealer's ``favorite car module'' would not add any table at all, but only extend the cus_customer table by the column cus_customer.favcar_favorite. \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _101}{\*\bkmkend _101}\b\fs28\lang1024\f1 1.2.2. Package Names\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Eventually packages will be used to select parts of GNUe for distribution and use. Currently packages names are only used in the cvs heirachy to group modules. \hyphpar0\par\pard\sb400\li960\sl260 It should also be noted that the base level of granularity for the GNUe system is modules. Any module can be installed individually. \hyphpar0\par\pard\sb400\li960\sl260 The following package names should be used: \hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  supply_chain - Supply chain, distribution, purchasing, inventory. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  base - Common to all modules. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  sales - Traditional sales and order entry. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  e_comm - Electronic commerce, EDI, and web sales. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  crm - Customer relations management. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  mfg - Manufacturing. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  fin - Finance and accounting. (recent change) \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  hr - Human Relations. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  prj - Project Management. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  budget - Budget Management. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  r_d - Research and Development. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  facilities - Facilities Management. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  eng - Engineering \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _133}{\*\bkmkend _133}\b\fs28\f1 1.2.3. Data Modeling Rules\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Understanding the data model is a very basic thing for understanding a module. In order to make the data model more understandable for others, some general guidelines should be agreed upon and followed. \hyphpar0\par\pard\sb400\li960\sl260 (Remark: I know that none of the following topics is new or revolutionary, but that rather all of them have somehow been implemented yet. The point would be that we would use these structure consistently.) \hyphpar0\par\pard\sb400\li960\sl260 I would divide the tables of a data model into the following classes: \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.3.1. Base Tables\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 These tables are typically common or used with many modules. The base tables are created from base business objects which are currently found in the base package in cvs. \hyphpar0\par\pard\sb400\li960\sl260 Examples include: \hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 item - only the base item fields, as the modules may also have a sales_item and a stock_item. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 units of measure \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 currency \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 people \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 locations \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 etc \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 These tables contain rather static information. No usual transaction should result in any change in such a table.\hyphpar0\par\pard\sb400\li960\sl260 Most of the information stored in these tables is entered directly by the user.\hyphpar0\par\pard\sb400\li960\sl260 These tables are typically introduced by some modules and occasionally extended by some columns in other modules. In some cases the business objects are not tables at all, but are used as generic definitions that are included in other business objects. See Chapter 2 inheritance and EXTEND keywords. \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.3.2. Auxiliary Tables\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  Auxiliary tables are those tables giving meaning to codes, which can range from just expanding a shortcut into some longer text to providing information about how to process transactions depending on the code. \hyphpar0\par\pard\sb400\li960\sl260  Some examples: \hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 expanding territory codes to their full, human-understandable meaning, e.g. E12a to Northern Europe. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 expanding a warehouse code into the full address of the warehouse. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 providing taxation information per item tax code. \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 Auxiliary tables are probably the most static tables of the whole system. They are maintained only by the user. No change in a table of this type may be done auto magically by the system.\hyphpar0\par\pard\sb400\li960\sl260 Some proprietary systems use a single table for all code-to-meaning-expansions, providing a column in this table telling what type of code is expanded. We don't do this in GNUe, because it may come that for some code we will need additional columns. Very many tables have started as code/meaning-tables and have grown. Instead, GNUe uses a separate table for each type of code.\hyphpar0\par\pard\sb400\li960\sl260 Something very related to auxiliary tables are matrix tables. They store static, user-provided information depending on two or more codes and/or base table ID's.\hyphpar0\par\pard\sb400\li960\sl260 Examples for matrix tables are\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 accounting information per item accounting code and customer accounting code \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 special prices per item and customer \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 discount per customer and item discount code @end itemize \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\f1 1.2.3.3. Document Tables\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 These tables store the business documents. There is typically some master/detail-relationship in these tables; sometimes a rather complex one. \hyphpar0\par\pard\sb400\li960\sl260 Some modules include more than one document type (each of them consisting of several tables).\hyphpar0\par\pard\sb400\li960\sl260 Examples include:\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 GNUe Inventory would provide some document for shifting goods from one storeroom to another and for changing stock without using sales/purchase order processing. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 GNUe Sales would possibly follow the line: offer -> sales order -> bill of material -> invoice \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 Document tables are filled by the user through the corresponding business object.\hyphpar0\par\pard\sb400\li960\sl260 Some documents result in a transaction (e.g. a bill of material does, an offer does not). These transaction should take place as soon as the document is entered or generated, even if it is not printed out immediately. The record of the generated transaction log entry should be addressable out of the document table, so that the transaction log entry can be deleted when the document is reversed. Transaction logs are discussed in Transaction Log Tables. \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.3.4. Batch Tables\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Batch tables should be a convenient way for other modules and/or external systems and/or the user to feed a GNUe module with data.\hyphpar0\par\pard\sb400\li960\sl260 Batch tables are flat tables without master/detail relationships. There are document batch tables and transaction batch tables.\hyphpar0\par\pard\sb400\li960\sl260 Document batch tables can be used to easily generate documents without dealing with the complex table structure of the document.\hyphpar0\par\pard\sb400\li960\sl260 Transaction batch tables are the only way to generate transactions without going the direct way through the business object.\hyphpar0\par\pard\sb400\li960\sl260 Examples include:\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 sales order batch table, from which sales orders can be generated \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 G/L batch table, which could be a way for the user to enter data into the G/L module without having booked it immediately. Data would of course be checked while entered. \hyphpar0\par\pard\sb400\li960\sl260 \lang1033  Every batch table has an assigned business object which is able to process a given batch number. For supporting external systems, batch processing should be doable even from command line.\hyphpar0\par\pard\sb400\li960\sl260 Batch tables typically consist of few columns that must be filled in and more columns that may be filled in, but can also be left empty, so that the system will take standard values.\hyphpar0\par\pard\sb400\li960\sl260 Using batch tables is an additional possibility to feed data into GNUe modules, complementing the business objects. However, batch tables have some advantages:\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Document batch tables make it easily possible to feed a number of items to be processed and let the business object decide which items can be combined into one document. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Batch tables can be persistent. Processing of batch tables can be delayed by the user, e.g. to \hyphpar0\par\pard\sb100\li1360\ri200\sl234\fi-200 \tx1360 \fs16 \'95\tab \fs18 print the batch and let the boss sign it before it is processed \hyphpar0\par\pard\li1360\ri200\sl234\fi-200 \tx1360 \fs16 \'95\tab \fs18 wait until the batch is big enough to be worth while being processed \hyphpar0\par\pard\li1360\ri200\sl234\fi-200 \tx1360 \fs16 \'95\tab \fs18 save time during the day and process it in the night. \hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Batch tables can even be used by systems that don't speak CORBA. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 You can transfer data in batch tables from one GNUe installation to another without having problems with data integrity. \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 By convention, batch table names end in _batch. \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.3.5. Transaction Log Tables\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 These tables store all information on all the transactions concerning a certain base table. Every base table has a transaction log table assigned.\hyphpar0\par\pard\sb400\li960\sl260 Transaction log tables are flat (have no master/detail-relationship).\hyphpar0\par\pard\sb400\li960\sl260 Examples include:\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 stock log stores all transactions where any item's stock has changed \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 customer log stores all bills, credits and payments \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 account log of course stores all transactions on a given account \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 Records of such a table are neither created nor modified manually by a user, but maintained automatically by the corresponding business objects; mostly generated out of batch tables or document tables.\hyphpar0\par\pard\sb400\li960\sl260 Transaction log tables usually have many secondary keys as they serve as the base for many reports.\hyphpar0\par\pard\sb400\li960\sl260 Transaction log tables are by convention named after the corresponding base table suffixed by ``_log''. \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.3.6. Balance Tables\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 These tables contain information about balances regarding certain dates.\hyphpar0\par\pard\sb400\li960\sl260 A master/detail-relationship in the base table can be reflected in a master/detail-relationship in the corresponding balance table.\hyphpar0\par\pard\sb400\li960\sl260 Examples:\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 item balance stores actual stock, reserved stock and available stock for every item per end of each month \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 stock balance stores the same per storeroom \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 customer balance stores what the customer owes per end of each month \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 account balance simply stores the balance of each account per end of each month \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 These tables contain 100% redundant information and are never changed by the user. These tables are updated by the system every time a entry in the transaction log table is created, modified or deleted.\hyphpar0\par\pard\sb400\li960\sl260 The only reason to have these tables is for performance reasons.\hyphpar0\par\pard\sb400\li960\sl260 For each balance table, the period of creating balances should be configurable by the user.\hyphpar0\par\pard\sb400\li960\sl260 If GNUe has no bugs, the figures in the balance table must at every moment be identical to the sum of all entries of the transaction log before the given point in time. Due to this, there will be business objects for every balance table that\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 check whether the sums are still correct and \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 correct the balances according to the transaction log or maybe even \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 generate an entry in the transaction log to make it fit the balance. \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 By convention, balance tables are named like the corresponding base tables and suffixed by _bal. \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _267}{\*\bkmkend _267}\b\fs28\lang1024\f1 1.2.4. Data Types\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Using the same data types for the same purpose consistently makes it easy for the modules to communicate with each other, and for the maintainers to learn into another module.\hyphpar0\par\pard\sb400\li960\sl260 Use of the following data types would be recommended: \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.4.1. Primary Keys\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Primary Keys of a table should never be user-visible and may not have any other meaning than to provide a unique identification of a specific row.\hyphpar0\par\pard\sb400\li960\sl260 All tables will have a user-visible, meaningful key, which may consist of one or more columns, and which will not be the primary key.\hyphpar0\par\pard\sb400\li960\sl260 Batch tables, as they may be filled by the user or by external systems, should provide the possibility to choose between filling in the primary key or the user-visible key.\hyphpar0\par\pard\sb400\li960\sl260 All other tables must reference the primary key to make all user-visible data changeable.\hyphpar0\par\pard\sb400\li960\sl260 For the generation of primary keys, we will not use auto increment features of the database, as different database back ends implement that very differently or maybe even not at all. We will rather use 64-bit-integer values for primary keys and have seed tables, where the last used value per table is stored. There are very strong plans about implementing this in GEDI and have the business layer see ``virtual auto increment fields'', so a module writer doesn't have to know about this at all. (I wonder, why I write this here, anyway). \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.4.2. Money\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Money is now defined as a base object in the currency module. It is defined as a 64 bit integer with an implied decimal point. So if the integer value was = 1234567 and the implied decimal point was 3, the actual amount of money representated will be 1234.567. Also a currency must be defined for all money objects. In a single currency system the default currency should make this transparent to the casual user. \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.4.3. Quantity\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Quantity is now defined as a base object in the unit module. Like currency, a quantity is defined with a 64 bit integer, an implied decimal point and a unit of measure. If the unit of measure is "each" then "each" must be defined in the unit object of the unit module. \hyphpar0\par\pard\sb200\s4\li960\sl312 \b\fs24\lang1024\f1 1.2.4.4. Codes\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Codes (that means the user-visible key to auxiliary tables) will be char<8> consistently, which will enable the user to make the codes meaningful and easy to remember. \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart _287}{\*\bkmkend _287}\b\fs28\lang1024\f1 1.2.5. Storing Redundant Data\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Redundant data is stored in the database if and only if performance can be won, >i.e. if a large (in most cases undetermined) count of database rows would have to be processed to come to the result.\hyphpar0\par\pard\sb400\li960\sl260 Sums and balances are a typical case of redundant data which is stored in the database, e.g. grand total value of an invoice, or all balance tables.\hyphpar0\par\pard\sb400\li960\sl260 Redundant data which can easily be calculated out of a known low number of database rows (in most cases one, or one result row of some joined tables) will not be stored in the database but will be provided by the middle tier business objects. Typical examples include total of an invoice item (which calculates from quantity x price - discount), or stock available when we have stock total and stock reserved.\hyphpar0\par\pard\sb400\li960\sl260 For every redundant data stored in the database, the corresponding business object must have a method to check whether the redundant data is consistent and to adjust inconsistent data if desired. \hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart _293}{\*\bkmkend _293}\b\fs34\lang1024\f1 1.3. Form Design\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 This section will be added later. Feel free to send proposals. \hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart _296}{\*\bkmkend _296}\b\fs34\lang1024\f1 1.4. Report Design\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 This section will be added later. Feel free to send proposals. \hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 2. GNUe Business Objects}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 2. GNUe Business Objects}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_BUSINESSOBJECTS}{\*\bkmkend ID_BUSINESSOBJECTS}\b\fs41\f1 Chapter 2. GNUe Business Objects \keepn\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart _301}{\*\bkmkend _301}\fs34 2.1. Introduction\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  This chapter is $Id: main.rtf,v 1.1 2003/01/05 00:00:26 psu_gnue Exp $. \hyphpar0\par\pard\sb400\li960\sl260  Quick links to the various sections. \hyphpar0\par\pard\sb200\li960\sl260 \lang1024                    {\field{\*\fldinst   HYPERLINK  \\l ID_BUSINESSOBJECT}{\fldrslt \i Business Objects}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_CODINGCONVENTIONS}{\fldrslt \i Coding Conventions}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_COMMENT}{\fldrslt \i Comments}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_EXTEND}{\fldrslt \i EXTEND}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_FIELDS}{\fldrslt \i Fields}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_INCLUDE}{\fldrslt \i Include}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_ORDERBY}{\fldrslt LINK CONTENT ENDTERM 'ORDERBY.TITLE' MISSING}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_INHERITANCE}{\fldrslt \i Inheritance}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_LIST}{\fldrslt \i LIST}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_LOOKUP}{\fldrslt \i LOOKUP}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_METHOD}{\fldrslt \i METHOD}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_MODULESCLASSES}{\fldrslt \i MODULES and CLASSES}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_NAMINGCONVENTIONS}{\fldrslt \i Naming Conventions}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_REFERENCE}{\fldrslt \i REFERENCE}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_TYPECOMPLEX}{\fldrslt \i TYPE (Complex Fields)}}\sa0\par\fi0\sb0
                        {\field{\*\fldinst   HYPERLINK  \\l ID_TYPEDEF}{\fldrslt \i TYPE (Typedef) (NOT IMPLEMENTED YET)}}\sa0\par\fi0\sb0
        \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_BUSINESSOBJECT}{\*\bkmkend ID_BUSINESSOBJECT}\b\fs28\f1 2.1.1. Business Objects\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  Comments about what should be changed in this document (and what is even missing) are very appreciated, because every comment possibly reflects on future versions of this document and therefore will make the final document better. Please direct your comments to Neil Tiffin (neilt@gnue.org). \hyphpar0\par\pard\sb400\li960\sl260 This chapter was originally written by Neil Tiffin (neilt@gnue.org) and comes from documents and code originally written by Andrew Murie (andrewm@gnue.org) and coding standard from Reinhard M\'fcller(reinhard@gnue.org). Some examples contributed by Stanley A. Klein. \hyphpar0\par\pard\sb400\li960\sl260  GNUe business objects are defined in GNUe Class Files (GCD). These files have the extension ".gcd". This chapter discusses the format of GCD files. Business objects are processed by the GEAS server. If you are using GNUe Forms in 2-tier mode then things work a little differently. \hyphpar0\par\pard\sb400\li960\sl260  This document contains only definitions that are implemented in geas now or noted specifically as not implemented. Names in CAPITALS are literal words for the purpose of this document. More technical information may be present in the geas document directory in cvs. \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_NAMINGCONVENTIONS}{\*\bkmkend ID_NAMINGCONVENTIONS}\b\fs28\lang1024\f1 2.1.2. Naming Conventions\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  All names must start with an alpha character and contain only characters, numbers, and the "_" character. Names may not contain two "_" characters together (e.g "__") and may not end with the "_" character. \hyphpar0\par\pard\sb400\li960\sl260  The GCD syntax does not care about upper or lower case so all names should be written in lower case. \hyphpar0\par\pard\sb400\li960\sl260  Words in names should be separated by a single "_" character. \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_CODINGCONVENTIONS}{\*\bkmkend ID_CODINGCONVENTIONS}\b\fs28\lang1024\f1 2.1.3. Coding Conventions\keepn\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \b0\fs20\f0 1.\tab  All words, reserved words (class, module...) as well as identifiers (person, given_names...) are written all in lowercase, because lowercase is easier to write.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 2.\tab  Class definitions start at column 1, and the "\{" is on its own line. This will probably enable some emacs magic (we would have to adapt the c-mode a little bit for ignoring the "module"-line). Would need an emacs expert for that.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 3.\tab  The first line of all files is blank. This is required because docbook may not start a new line when including the file in the documentation.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 4.\tab  Lines are wrapped at 72 characters. Docbook will automatically wrap the lines and it does not look right.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 5.\tab  Use 2 character indenting, as this is GNU standard.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 6.\tab  The "*" is after the whitespace, just like normal c coding style.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 7.\tab  Beginning of all identifiers are in line for each class ("person" and "*type" start at the same column).  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 8.\tab  Don't duplicate the module name in a class. That means that we don't use class names like "person_type" in a module "person", but we user rather "type". Module "person", class "person" and field "person" is ok.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 9.\tab  Don't duplicate the class name in a field. Don't use "type_code" as a fieldname in a class "type", but we use just "code". Module "person", class "person" and field "person" is ok.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 10.\tab  Every file should have a second line that contains the filename and a short (one-line) explanation what this module is for. The filename should utilize the cvs keyword substitution string. For example: "# $RCSfile: main.rtf,v $ - then the one line description of the file."  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 11.\tab  Every type, class and extend definition should be preceded by a one-line comment that tells what this type/class is for. I am a fan of having such comments surrounded by lines.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 12.\tab  Module names and class names are always singular. It is hell to remember whether the class is called "phones_numbers", "phone_numbers", "phones_number" or "phone_number".  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 13.\tab  Field names are always singular, except list references are always plural.  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 14.\tab  Similar fields in different classes should have the same field name. If names are like employee::surname, customer::last_name, and supplier::lastname, this will drive every consultant crazy :)  \hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 15.\tab  Types should be generic types (type code_t = char<8>;) rather than specific types (type person_code_type).  \hyphpar0\par\pard\sb400\li960\sl260 \lang1033  An example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
module person\sa0\par\fi0\sb0
\{\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  # -------------------------------------------\sa0\par\fi0\sb0
  # common definitions for persons\sa0\par\fi0\sb0
  # -------------------------------------------\sa0\par\fi0\sb0
  type person\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    char surname<35>;\sa0\par\fi0\sb0
    char given_names<35>;\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
  \sa0\par\fi0\sb0
  # -------------------------------------------\sa0\par\fi0\sb0
  # types of persons\sa0\par\fi0\sb0
  # -------------------------------------------\sa0\par\fi0\sb0
  class type\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    char code<8>;\sa0\par\fi0\sb0
    char description<35>;\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
  \sa0\par\fi0\sb0
  # -------------------------------------------\sa0\par\fi0\sb0
  # employees\sa0\par\fi0\sb0
  # -------------------------------------------\sa0\par\fi0\sb0
  class employee\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    person::person *person;\sa0\par\fi0\sb0
    person::type   *type;\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\}; # end of module\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart _368}{\*\bkmkend _368}\b\fs34\f1 2.2. GNUe Class Files\keepn\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_MODULESCLASSES}{\*\bkmkend ID_MODULESCLASSES}\fs28 2.2.1. MODULES and CLASSES\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  A business object is defined using classes. Each class belongs to a module. If "MODULE module_name" is not specified then the class belongs to the "global" module. (e.g classes outside of a formal MODULE specification are assumed to be in the "MODULE global".) The basic format for this definition is: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
  MODULE module_name\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    CLASS class_name\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      # class body goes here.\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Where:\sa0\par\fi0\sb0
    module_name - the name of the module (or name space).\sa0\par\fi0\sb0
    class_name - the name of the class (or business object).\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  To reference a class in a different module or from a different class in the same module you must use the fully qualified name syntax: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    module_name::class_name\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  In each class GEAS automatically includes a unique 128 bit object identifier called objectid, which is stored as a char<32>. So in the previous example, the first field is module_name::class_name.objectid.\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_EXTEND}{\*\bkmkend ID_EXTEND}\b\fs28\lang1024\f1 2.2.2. EXTEND\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 A class may be extended by using the EXTEND keyword. EXTEND allows a module to add to the definition of an existing class. The syntax is exactly like a class definition:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     EXTEND fully_qualified_class_name\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    \};\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 For example an existing class item might be defined in the base module as:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    MODULE base\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      CLASS item\sa0\par\fi0\sb0
      \{\sa0\par\fi0\sb0
        char   description<35>;\sa0\par\fi0\sb0
      \};\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 And in the supply chain module we might want to add stock information ot it. So we would define:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
  EXTEND base::item\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    int   quantity_on_hand;\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
    \hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 Note that the extend defintion exists outside of any module definition even if it is defined inside a module definition. This produces the same results as if it had been originally defined as:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    MODULE base\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      CLASS item \{\sa0\par\fi0\sb0
        char   description<35>;\sa0\par\fi0\sb0
        int   quantity_on_hand;\sa0\par\fi0\sb0
      \};\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 This should not be confused with inheritance which produces two tables when processed by geas.\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_FIELDS}{\*\bkmkend ID_FIELDS}\b\fs28\lang1024\f1 2.2.3. Fields\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  Within a class fields and methods may be defined. A field is defined with the following format: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Syntax:\sa0\par\fi0\sb0
    type  field_name<size> = default_value NOT NULL;\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 Where:\hyphpar0\par\pard\sb25\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  field_name - is the field name. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  type - is one of INT, INT16, INT32, INT64, TEXT, FLOAT, DATE, TIME, DATETIME or CHAR. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  size - is the length for TEXT and CHAR fields. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  default_value - is a value assigned with a new object is created. This is optional. If no default_value then dont include the equal sign. \hyphpar0\par\pard\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  NOT NULL - specifies that the field can not be written if the value is null. (not implemented yet) \hyphpar0\par\pard\sb400\li960\sl260 \lang1033 Example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    MODULE example\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      CLASS first\sa0\par\fi0\sb0
      \{\sa0\par\fi0\sb0
        CHAR    street1<25>;\sa0\par\fi0\sb0
        CHAR    street2<25>;\sa0\par\fi0\sb0
        CHAR    city<15>;\sa0\par\fi0\sb0
        CHAR    county<15>;\sa0\par\fi0\sb0
        CHAR    state_code<8>;\sa0\par\fi0\sb0
        CHAR    country_code<8>;\sa0\par\fi0\sb0
        CHAR    postal_code<10>;\sa0\par\fi0\sb0
        TEXT    my_notes;\sa0\par\fi0\sb0
        FLOAT   latitude;\sa0\par\fi0\sb0
        FLOAT   longitude;\sa0\par\fi0\sb0
        INT     some_int32_number;\sa0\par\fi0\sb0
        INT16   some_small_number;\sa0\par\fi0\sb0
        INT32   same_as_int;\sa0\par\fi0\sb0
        INT64   some_large_number;\sa0\par\fi0\sb0
        BOOLEAN a_boolean;\sa0\par\fi0\sb0
        BOOL    another_boolean;\sa0\par\fi0\sb0
        DATE    today;\sa0\par\fi0\sb0
        TIME    now;\sa0\par\fi0\sb0
      \};\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Note: TEXT and CHAR fields should not be confused with SQL field types. They are GEAS field types and are mapped to the best type depending on the back end database. (For PostgreSQL they are both VARCHAR).\hyphpar0\par\pard\sb400\li960\sl260  Note: Field names may not start with "sys_". These field names are reserved for use by GEAS. For example, GEAS will automatically insert the fields sys_id, sys_cre_user, sys_cre_time, sys_mod_user, and sys_mod_time for object uuid, user name that created object, date/time object created, user name that last modified object, and date/time object last modified respectively.\hyphpar0\par\pard\sb400\li960\sl260  TEXT - fields do not have a size attribute. They take up the amount of space actually required. That may be 1000 in one record and 100 in the next record for the same field. TEXT fields can not be searched. \hyphpar0\par\pard\sb400\li960\sl260  CHAR - fields have a maximum size attribute and default to a length of 1 if not specified. Any trailing space (ASCII 32) characters are removed. \hyphpar0\par\pard\sb400\li960\sl260  INT - Integer number currently implemented in 32 bits. \hyphpar0\par\pard\sb400\li960\sl260  INT16 - Integer number currently implemented in 16 bits. \hyphpar0\par\pard\sb400\li960\sl260  INT32 - Integer number currently implemented in 32 bits. \hyphpar0\par\pard\sb400\li960\sl260  INT64 - Integer number currently implemented in 64 bits. \hyphpar0\par\pard\sb400\li960\sl260  DATE - Date formatted for the underlying SQL database.\hyphpar0\par\pard\sb400\li960\sl260  TIME - Time formatted for the underlying SQL database.\hyphpar0\par\pard\sb400\li960\sl260  BOOL - Boolean 1 or 0. Implemented as SQL boolean value in PostGreSQL and char<1> is MySQL.\hyphpar0\par\pard\sb400\li960\sl260  BOOLEAN - Alias for BOOL.\hyphpar0\par\pard\sb400\li960\sl260  DATETIME- Is formatted for both date and time as provided for in the SQL database.\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_TYPECOMPLEX}{\*\bkmkend ID_TYPECOMPLEX}\b\fs28\lang1024\f1 2.2.4. TYPE (Complex Fields)\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  The TYPE syntax allows the creation of complex types. Complex types can be used in CLASS definitions as shorthand. The syntax essentially the same as CLASS and is:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Syntax:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    TYPE type_name\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Example:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    TYPE money\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
        int  amount;\sa0\par\fi0\sb0
        char currency<3>;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
This allows the following to work:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    CLASS item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
        money   cost;\sa0\par\fi0\sb0
        char    desc<25>;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  This creates the fields item::cost.amount and item::cost.currency. And is roughly the same as doing:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    CLASS item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      int     cost_amount;\sa0\par\fi0\sb0
      char    cost_currency<25>;\sa0\par\fi0\sb0
      char    desc<25>;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_TYPEDEF}{\*\bkmkend ID_TYPEDEF}\b\fs28\f1 2.2.5. TYPE (Typedef) (NOT IMPLEMENTED YET)\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  The TYPE syntax also allows the specification of general types. The syntax is:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Syntax:\sa0\par\fi0\sb0
    TYPE new_type = base_type<size>;  (NOT IMPLEMENTED YET)\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Where:\sa0\par\fi0\sb0
    new_type - is the name of the new type.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    base_type - is a previously existing type.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    size - is the size of the type if necessary.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
Example:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    TYPE product_code = char<25>;\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  This defines a new type called product_code that can be used in class definitions. \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    MODULE inventory\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      TYPE product_code = char<25>;\sa0\par\fi0\sb0
      TYPE product_class = char<8>;\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
      CLASS product\sa0\par\fi0\sb0
      \{\sa0\par\fi0\sb0
        inventory::product_code  product_id;\sa0\par\fi0\sb0
        inventory::product_class class;\sa0\par\fi0\sb0
        char                     description<100>;\sa0\par\fi0\sb0
      \};\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
      CLASS product_classification\sa0\par\fi0\sb0
      \{\sa0\par\fi0\sb0
        inventory::product_class class;\sa0\par\fi0\sb0
        char                     description<20>;\sa0\par\fi0\sb0
      \};\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  In this example product.class is defined as a char<8> and product.product_id is defined as a char<15>;\hyphpar0\par\pard\sb400\li960\sl260  As you can see using TYPE you only have to define the size of a field once and dont have to worry about a mistake in another definition causing a related field to be a different size. \hyphpar0\par\pard\sb400\li960\sl260  To reference types from another module use the fully qualified name. For example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     inventory::product_code\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_COMMENT}{\*\bkmkend ID_COMMENT}\b\fs28\f1 2.2.6. Comments\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  Comments start with the "#" character and continue to the end of the line. \hyphpar0\par\pard\sb400\li960\sl260  For example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     char   phone_code<4>;    # for validating phone country code\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_INCLUDE}{\*\bkmkend ID_INCLUDE}\b\fs28\f1 2.2.7. Include\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  The include statement is used to reference classes defined outside of the current file. The include path is relative to the current file. If the file has already been included the scanner will not include it a second time.\hyphpar0\par\pard\sb400\li960\sl260 For example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     include "../../../base/location/classes/address.gcd"\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 You may not have more than one file with the same name. Paths do not make files unique to GEAS. Therefore you may not have the following:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     include "../../../base/location/classes/address.gcd"\sa0\par\fi0\sb0
    include "../../../supply-chain/vendor/classes/address.gcd"\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  The second file will never ever get processed.\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_ORDERBY}{\*\bkmkend ID_ORDERBY}\b\fs28\lang1024\f1 2.2.8. ORDER BY\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0 Classes can have an 'order by' section, that causes all queries to be sorted on a given field. (er, should have been multiple fields - call that a TODO)\hyphpar0\par\pard\sb400\li960\sl260  Syntax: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2    ORDER BY \cf1  [DESC];\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0\cf0  Examples: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 class hello\sa0\par\fi0\sb0
\{\sa0\par\fi0\sb0
    int32 field;\sa0\par\fi0\sb0
    ORDER BY field;\sa0\par\fi0\sb0
\};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
class there\sa0\par\fi0\sb0
\{\sa0\par\fi0\sb0
    int32 field;\sa0\par\fi0\sb0
    ORDER BY field DESC;\sa0\par\fi0\sb0
\};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 (with the query API - ie, the classes defined in query.idl - the 'DESC' option reverses the sort order.) \hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_LOOKUP}{\*\bkmkend ID_LOOKUP}\b\fs28\lang1024\f1 2.2.9. LOOKUP\keepn\hyphpar0\par\pard\sb200\li1360\sl234 \fs18 Use of LOOKUP, REFERENCE, and LIST: \b0 We are not really happy with the LOOKUP, REFERENCE and LIST keywords. They make it possible to link tables together with a field that is not the primary key, even with a field that is not guaranteed to have an unique value.\hyphpar0\par\pard\sb100\li1360\sl234 What we would rather like it if geas made it possible to define any field of an object explicitely as the primary key of the table, and that all references would use _that_ field for the foreign key. Only if no field was explicitely defined as primary key, geas would create the implicite objectid. But that's way ahead.\hyphpar0\par\pard\sb100\li1360\sl234 Meanwhile we expect that the usage of the LOOKUP, REFERENCE and LIST syntax will be depreciated.\hyphpar0\par\pard\sb100\li1360\sl234 Apart from that, we will in most cases use the objectid as the primary key; we have discussed that in detail some time ago and widely agreed on not having user-visible primary keys.\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  The lookup type is used to lookup a field from another class. A LOOKUP can be defined where a field is defined in the class definition.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 Syntax:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    LOOKUP new_fld_name : src_class(src_fld).src_data = comp_field;\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Where:\sa0\par\fi0\sb0
    new_fld_name - is the new field name for reference in the class. It\sa0\par\fi0\sb0
         does not result in a table column in the database.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    src_class - is the name of the source class used to find the lookup\sa0\par\fi0\sb0
         data.  If this class is in a different module then is requires\sa0\par\fi0\sb0
         a fully qualified name.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    src_data - is the data that is copied into the new_fld_name.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    comp_field - is the field from the current class that is matched.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
Therefore:\sa0\par\fi0\sb0
       if src_class.src_fld equal comp_field then\sa0\par\fi0\sb0
           src_class.src_data is copied into new_fld_name\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_REFERENCE}{\*\bkmkend ID_REFERENCE}\b\fs28\f1 2.2.10. REFERENCE\keepn\hyphpar0\par\pard\sb200\li1360\sl234 \fs18 Use of LOOKUP, REFERENCE, and LIST: \b0 We are not really happy with the LOOKUP, REFERENCE and LIST keywords. They make it possible to link tables together with a field that is not the primary key, even with a field that is not guaranteed to have an unique value.\hyphpar0\par\pard\sb100\li1360\sl234 What we would rather like it if geas made it possible to define any field of an object explicitely as the primary key of the table, and that all references would use _that_ field for the foreign key. Only if no field was explicitely defined as primary key, geas would create the implicite objectid. But that's way ahead.\hyphpar0\par\pard\sb100\li1360\sl234 Meanwhile we expect that the usage of the LOOKUP, REFERENCE and LIST syntax will be depreciated.\hyphpar0\par\pard\sb100\li1360\sl234 Apart from that, we will in most cases use the objectid as the primary key; we have discussed that in detail some time ago and widely agreed on not having user-visible primary keys.\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  The explicit reference type is used to get a complete instance of a class object. A REFERENCE can be defined where a field is in the class definition. Its syntax is nearly the same as LOOKUP.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     REFERENCE new_fld_name : src_class(src_field) = comp_field;\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Where:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    new_fld_name - is the new field name for reference in the class. It\sa0\par\fi0\sb0
         does not result in a table column in the database.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    src_class - is the fully qualified name of the source class used to \sa0\par\fi0\sb0
         find the lookup data.\sa0\par\fi0\sb0
         \sa0\par\fi0\sb0
    src_field - is the field in the src_class used for comparison.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    comp_field - is the field from the current class that is matched.\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Therefore:\hyphpar0\par\pard\sb400\li960\sl260  The new_fld_name is a reference to an object instance where src_fld and comp_field match.\hyphpar0\par\pard\sb400\li960\sl260  In the following example, order2 represents an explicit REFERENCE and order1 represents an implicit REFERENCE. Each field references the specific instance of the order:master object from the order::detail object. In the case of the implicit REFERENCE (order1) the reference is make by using the objectid of order::master. In the case of the explicit REFERENCE (order2) the field order_number is used to relate the objects. \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 MODULE order\sa0\par\fi0\sb0
\{\sa0\par\fi0\sb0
  class master\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    int     order_number;\sa0\par\fi0\sb0
    char    stuff<20>;\sa0\par\fi0\sb0
    int     more_stuff;\sa0\par\fi0\sb0
    char    the_last_stuff<20>; \sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
class detail\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    int       order_number;\sa0\par\fi0\sb0
    REFERENCE        order2 : order::master(order_number) = this.order_number;\sa0\par\fi0\sb0
    order::master [] order1;\sa0\par\fi0\sb0
    int       detail_stuff;\sa0\par\fi0\sb0
    char      last_detail_stuff;\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
\};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  REFERENCE is used to implement many to one relationships. A short hand way to create a REFERENCE is to use the following syntax:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    src_module::src_class *new_fld_name;\sa0\par\fi0\sb0
    \hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 This is a shortcut for:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    REFERENCE new_fld_name : src_module::src_class(id) = other_new_fld_name;\sa0\par\fi0\sb0
    \hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 Where id and other_new_fld_name are fields that are used and maintained automatically by geas.\hyphpar0\par\pard\sb400\li960\sl260  To make this work in theory, you're supposed to programmatically use container.setReference(fieldname,object) and container.getReference(fieldname) from the client code and let GEAS handle the reference automatically.\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_LIST}{\*\bkmkend ID_LIST}\b\fs28\lang1024\f1 2.2.11. LIST\keepn\hyphpar0\par\pard\sb200\li1360\sl234 \fs18 Use of LOOKUP, REFERENCE, and LIST: \b0 We are not really happy with the LOOKUP, REFERENCE and LIST keywords. They make it possible to link tables together with a field that is not the primary key, even with a field that is not guaranteed to have an unique value.\hyphpar0\par\pard\sb100\li1360\sl234 What we would rather like it if geas made it possible to define any field of an object explicitely as the primary key of the table, and that all references would use _that_ field for the foreign key. Only if no field was explicitely defined as primary key, geas would create the implicite objectid. But that's way ahead.\hyphpar0\par\pard\sb100\li1360\sl234 Meanwhile we expect that the usage of the LOOKUP, REFERENCE and LIST syntax will be depreciated.\hyphpar0\par\pard\sb100\li1360\sl234 Apart from that, we will in most cases use the objectid as the primary key; we have discussed that in detail some time ago and widely agreed on not having user-visible primary keys.\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  The LIST type is used to get multiple instances of a class object. A LIST can be defined where a field is defined in the class definition. Its syntax is nearly the same as LOOKUP.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    LIST new_fld_name : src_class(src_field) = comp_field;\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Where:\sa0\par\fi0\sb0
    new_fld_name - is the new field name for reference in the class. It\sa0\par\fi0\sb0
         does not result in a table column in the database.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    src_class - is the name of the source class used to find the lookup\sa0\par\fi0\sb0
         data.  If this class is in a different module then is requires\sa0\par\fi0\sb0
         a fully qualified name.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    src_field - is the field in the src_class used for comparison.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    comp_field - is the field from the current class that is matched.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Therefore:\sa0\par\fi0\sb0
    The new_fld_name is a reference to an object instance where src_fld and\sa0\par\fi0\sb0
    comp_field match.\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  List is typically used to create one to many relationships (master-detail). Many to many relationships require an intermediate class. A short hand way to create a LIST is to use the following syntax:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2         \sa0\par\fi0\sb0
    src_class [] new_fld_name;\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 This is a shortcut for:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    LIST new_fld_name : src_module::src_class(id) = other_new_fld_name;\sa0\par\fi0\sb0
    \hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 Where id and other_new_fld_name are fields that are used and maintained automatically by geas.\hyphpar0\par\pard\sb400\li960\sl260  To make this work in theory, you're supposed to programmatically use container.setReference(fieldname,object) and container.getReference(fieldname) from the client code and let GEAS handle the reference automatically.\hyphpar0\par\pard\sb400\li960\sl260  In the following example, detail1 represents an explicit LIST and detail2 represents an implicit LIST. Each field references the specific instances of the order:detail objects from the order::master object. In the case of the implicit LIST reference (detail2) the reference is make by using the objectid's of order::detail. In the case of the explicit LIST reference (detail1) the field order_number is used to relate the objects. \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 MODULE order\sa0\par\fi0\sb0
\{\sa0\par\fi0\sb0
  class master\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    int               order_number;\sa0\par\fi0\sb0
    LIST              detail1 : order::detail(order_number) = this.order_number;\sa0\par\fi0\sb0
    order::detail  [] detail2;\sa0\par\fi0\sb0
  \}; \sa0\par\fi0\sb0
\sa0\par\fi0\sb0
class detail\sa0\par\fi0\sb0
  \{\sa0\par\fi0\sb0
    int       order_number;\sa0\par\fi0\sb0
    int       detail_stuff;\sa0\par\fi0\sb0
    char      last_detail_stuff;\sa0\par\fi0\sb0
  \};\sa0\par\fi0\sb0
\};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_METHOD}{\*\bkmkend ID_METHOD}\b\fs28\f1 2.2.12. METHOD\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  Methods allow a call to C or Python code. A method can be defined where a field is defined in the class definition. Its syntax is:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    return_type method_name(arg_type arg_name);\sa0\par\fi0\sb0
    \hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Where:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    return_type - the type (CHAR, INT, FLOAT) of the returned value, \sa0\par\fi0\sb0
        if any.  The only type currently working is CHAR.\sa0\par\fi0\sb0
    method_name - the method name.\sa0\par\fi0\sb0
    arg_type - the type of the argument.  See caveat below.\sa0\par\fi0\sb0
    arg_name - the argument name.\sa0\par\fi0\sb0
    \hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Caveat - the only type passed to C or Python is string type. So your method code will have to do conversions as necessary. \hyphpar0\par\pard\sb400\li960\sl260 Example: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    class test\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      char callme( int a , int b );\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Python Example\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    import string\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    def test_callme(obj,a,b,server):\sa0\par\fi0\sb0
        print "callme called"\sa0\par\fi0\sb0
        print "this.name = " + obj.getField("name")\sa0\par\fi0\sb0
        return obj.getField("name")\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  C Example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    #include <glib.h>\sa0\par\fi0\sb0
    #include <gmodule.h>\sa0\par\fi0\sb0
    #include <stdio.h>\sa0\par\fi0\sb0
    #include "../../../src/geas.h"\sa0\par\fi0\sb0
    #include "../../../src/exceptions.h"\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    G_MODULE_EXPORT char *\sa0\par\fi0\sb0
    test_callme( GEAS_DataObject obj , GEAS_Arguments *args ,\sa0\par\fi0\sb0
                 GEAS_Connection server , CORBA_Environment *ev )\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
       /* concatenate arguments using g_strdup_printf */\sa0\par\fi0\sb0
       CORBA_char *retval;\sa0\par\fi0\sb0
       char *tmp = g_strdup_printf( "%s:%s" , args->_buffer[0] , args->_buffer[1] );\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
       retval = CORBA_string_dup( tmp ); // must use CORBA_string_dup for return vlaues\sa0\par\fi0\sb0
       g_free( tmp ); \sa0\par\fi0\sb0
\sa0\par\fi0\sb0
       return( retval );\sa0\par\fi0\sb0
    \}\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb216\s3\sl374 {\*\bkmkstart ID_INHERITANCE}{\*\bkmkend ID_INHERITANCE}\b\fs28\f1 2.2.13. Inheritance\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1033\f0  Classes can inherit from parent classes. The syntax is:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    CLASS class_name : parent1_class, parent2_class\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0 CLASS example:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    CLASS item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      char  desc<25>;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    CLASS stock_item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      int quantity_on_hand;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    CLASS sales_item : item, stock_item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      float  price;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  TYPE example\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
    TYPE item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      char  desc<25>;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    TYPE stock_item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      int quantity_on_hand;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    TYPE sales_item : item, stock_item\sa0\par\fi0\sb0
    \{\sa0\par\fi0\sb0
      float  price;\sa0\par\fi0\sb0
    \};\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Where:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2     item - is a parent of sales_item.\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
    stock_item - is a parent of sales_item.\hyphpar0\par\pard\sb400\li960\sl260 \fs20\lang1033\f0  Inheritance works for both CLASS or TYPE, but you can not mix them.\hyphpar0\par\pard\sb400\li960\sl260  The field sales_item.desc is the description inherited from class item and sales_item.quantity_on_hand is inherited from class stock_item. Of course you can still refer directly to the parent class as item.desc or stock_item.quantity_on_hand.\hyphpar0\par\pard\sb400\li960\sl260  If a field name is used more than once in parent and child classes then geas will die a slow and terrible death. (Hopefully this will be fixed soon.)\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}\pard\sl20 {\*\bkmkstart ID_APPENDIXES}{\*\bkmkend ID_APPENDIXES}\fs20 \hyphpar0\par\pard\sb373\sl647\qc \b\fs49\f1 I. Appendixes\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix A. GNU General Public License}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix A. GNU General Public License}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart _535}{\*\bkmkend _535}\b\fs41\f1 Appendix A. GNU General Public License \keepn\hyphpar0\par\pard\sb200\li960\sl234 \b0\fs18\f2                     GNU GENERAL PUBLIC LICENSE\sa0\par\fi0\sb0
                       Version 2, June 1991\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
 Copyright (C) 1989, 1991 Free Software Foundation, Inc.\sa0\par\fi0\sb0
                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\sa0\par\fi0\sb0
 Everyone is permitted to copy and distribute verbatim copies\sa0\par\fi0\sb0
 of this license document, but changing it is not allowed.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
                            Preamble\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  The licenses for most software are designed to take away your\sa0\par\fi0\sb0
freedom to share and change it.  By contrast, the GNU General Public\sa0\par\fi0\sb0
License is intended to guarantee your freedom to share and change free\sa0\par\fi0\sb0
software--to make sure the software is free for all its users.  This\sa0\par\fi0\sb0
General Public License applies to most of the Free Software\sa0\par\fi0\sb0
Foundation's software and to any other program whose authors commit to\sa0\par\fi0\sb0
using it.  (Some other Free Software Foundation software is covered by\sa0\par\fi0\sb0
the GNU Library General Public License instead.)  You can apply it to\sa0\par\fi0\sb0
your programs, too.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  When we speak of free software, we are referring to freedom, not\sa0\par\fi0\sb0
price.  Our General Public Licenses are designed to make sure that you\sa0\par\fi0\sb0
have the freedom to distribute copies of free software (and charge for\sa0\par\fi0\sb0
this service if you wish), that you receive source code or can get it\sa0\par\fi0\sb0
if you want it, that you can change the software or use pieces of it\sa0\par\fi0\sb0
in new free programs; and that you know you can do these things.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  To protect your rights, we need to make restrictions that forbid\sa0\par\fi0\sb0
anyone to deny you these rights or to ask you to surrender the rights.\sa0\par\fi0\sb0
These restrictions translate to certain responsibilities for you if you\sa0\par\fi0\sb0
distribute copies of the software, or if you modify it.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  For example, if you distribute copies of such a program, whether\sa0\par\fi0\sb0
gratis or for a fee, you must give the recipients all the rights that\sa0\par\fi0\sb0
you have.  You must make sure that they, too, receive or can get the\sa0\par\fi0\sb0
source code.  And you must show them these terms so they know their\sa0\par\fi0\sb0
rights.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  We protect your rights with two steps: (1) copyright the software, and\sa0\par\fi0\sb0
(2) offer you this license which gives you legal permission to copy,\sa0\par\fi0\sb0
distribute and/or modify the software.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  Also, for each author's protection and ours, we want to make certain\sa0\par\fi0\sb0
that everyone understands that there is no warranty for this free\sa0\par\fi0\sb0
software.  If the software is modified by someone else and passed on, we\sa0\par\fi0\sb0
want its recipients to know that what they have is not the original, so\sa0\par\fi0\sb0
that any problems introduced by others will not reflect on the original\sa0\par\fi0\sb0
authors' reputations.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  Finally, any free program is threatened constantly by software\sa0\par\fi0\sb0
patents.  We wish to avoid the danger that redistributors of a free\sa0\par\fi0\sb0
program will individually obtain patent licenses, in effect making the\sa0\par\fi0\sb0
program proprietary.  To prevent this, we have made it clear that any\sa0\par\fi0\sb0
patent must be licensed for everyone's free use or not licensed at all.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  The precise terms and conditions for copying, distribution and\sa0\par\fi0\sb0
modification follow.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
                    GNU GENERAL PUBLIC LICENSE\sa0\par\fi0\sb0
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  0. This License applies to any program or other work which contains\sa0\par\fi0\sb0
a notice placed by the copyright holder saying it may be distributed\sa0\par\fi0\sb0
under the terms of this General Public License.  The "Program", below,\sa0\par\fi0\sb0
refers to any such program or work, and a "work based on the Program"\sa0\par\fi0\sb0
means either the Program or any derivative work under copyright law:\sa0\par\fi0\sb0
that is to say, a work containing the Program or a portion of it,\sa0\par\fi0\sb0
either verbatim or with modifications and/or translated into another\sa0\par\fi0\sb0
language.  (Hereinafter, translation is included without limitation in\sa0\par\fi0\sb0
the term "modification".)  Each licensee is addressed as "you".\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Activities other than copying, distribution and modification are not\sa0\par\fi0\sb0
covered by this License; they are outside its scope.  The act of\sa0\par\fi0\sb0
running the Program is not restricted, and the output from the Program\sa0\par\fi0\sb0
is covered only if its contents constitute a work based on the\sa0\par\fi0\sb0
Program (independent of having been made by running the Program).\sa0\par\fi0\sb0
Whether that is true depends on what the Program does.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  1. You may copy and distribute verbatim copies of the Program's\sa0\par\fi0\sb0
source code as you receive it, in any medium, provided that you\sa0\par\fi0\sb0
conspicuously and appropriately publish on each copy an appropriate\sa0\par\fi0\sb0
copyright notice and disclaimer of warranty; keep intact all the\sa0\par\fi0\sb0
notices that refer to this License and to the absence of any warranty;\sa0\par\fi0\sb0
and give any other recipients of the Program a copy of this License\sa0\par\fi0\sb0
along with the Program.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may charge a fee for the physical act of transferring a copy, and\sa0\par\fi0\sb0
you may at your option offer warranty protection in exchange for a fee.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  2. You may modify your copy or copies of the Program or any portion\sa0\par\fi0\sb0
of it, thus forming a work based on the Program, and copy and\sa0\par\fi0\sb0
distribute such modifications or work under the terms of Section 1\sa0\par\fi0\sb0
above, provided that you also meet all of these conditions:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    a) You must cause the modified files to carry prominent notices\sa0\par\fi0\sb0
    stating that you changed the files and the date of any change.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    b) You must cause any work that you distribute or publish, that in\sa0\par\fi0\sb0
    whole or in part contains or is derived from the Program or any\sa0\par\fi0\sb0
    part thereof, to be licensed as a whole at no charge to all third\sa0\par\fi0\sb0
    parties under the terms of this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    c) If the modified program normally reads commands interactively\sa0\par\fi0\sb0
    when run, you must cause it, when started running for such\sa0\par\fi0\sb0
    interactive use in the most ordinary way, to print or display an\sa0\par\fi0\sb0
    announcement including an appropriate copyright notice and a\sa0\par\fi0\sb0
    notice that there is no warranty (or else, saying that you provide\sa0\par\fi0\sb0
    a warranty) and that users may redistribute the program under\sa0\par\fi0\sb0
    these conditions, and telling the user how to view a copy of this\sa0\par\fi0\sb0
    License.  (Exception: if the Program itself is interactive but\sa0\par\fi0\sb0
    does not normally print such an announcement, your work based on\sa0\par\fi0\sb0
    the Program is not required to print an announcement.)\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
These requirements apply to the modified work as a whole.  If\sa0\par\fi0\sb0
identifiable sections of that work are not derived from the Program,\sa0\par\fi0\sb0
and can be reasonably considered independent and separate works in\sa0\par\fi0\sb0
themselves, then this License, and its terms, do not apply to those\sa0\par\fi0\sb0
sections when you distribute them as separate works.  But when you\sa0\par\fi0\sb0
distribute the same sections as part of a whole which is a work based\sa0\par\fi0\sb0
on the Program, the distribution of the whole must be on the terms of\sa0\par\fi0\sb0
this License, whose permissions for other licensees extend to the\sa0\par\fi0\sb0
entire whole, and thus to each and every part regardless of who wrote it.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Thus, it is not the intent of this section to claim rights or contest\sa0\par\fi0\sb0
your rights to work written entirely by you; rather, the intent is to\sa0\par\fi0\sb0
exercise the right to control the distribution of derivative or\sa0\par\fi0\sb0
collective works based on the Program.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
In addition, mere aggregation of another work not based on the Program\sa0\par\fi0\sb0
with the Program (or with a work based on the Program) on a volume of\sa0\par\fi0\sb0
a storage or distribution medium does not bring the other work under\sa0\par\fi0\sb0
the scope of this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  3. You may copy and distribute the Program (or a work based on it,\sa0\par\fi0\sb0
under Section 2) in object code or executable form under the terms of\sa0\par\fi0\sb0
Sections 1 and 2 above provided that you also do one of the following:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    a) Accompany it with the complete corresponding machine-readable\sa0\par\fi0\sb0
    source code, which must be distributed under the terms of Sections\sa0\par\fi0\sb0
    1 and 2 above on a medium customarily used for software interchange; or,\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    b) Accompany it with a written offer, valid for at least three\sa0\par\fi0\sb0
    years, to give any third party, for a charge no more than your\sa0\par\fi0\sb0
    cost of physically performing source distribution, a complete\sa0\par\fi0\sb0
    machine-readable copy of the corresponding source code, to be\sa0\par\fi0\sb0
    distributed under the terms of Sections 1 and 2 above on a medium\sa0\par\fi0\sb0
    customarily used for software interchange; or,\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    c) Accompany it with the information you received as to the offer\sa0\par\fi0\sb0
    to distribute corresponding source code.  (This alternative is\sa0\par\fi0\sb0
    allowed only for noncommercial distribution and only if you\sa0\par\fi0\sb0
    received the program in object code or executable form with such\sa0\par\fi0\sb0
    an offer, in accord with Subsection b above.)\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The source code for a work means the preferred form of the work for\sa0\par\fi0\sb0
making modifications to it.  For an executable work, complete source\sa0\par\fi0\sb0
code means all the source code for all modules it contains, plus any\sa0\par\fi0\sb0
associated interface definition files, plus the scripts used to\sa0\par\fi0\sb0
control compilation and installation of the executable.  However, as a\sa0\par\fi0\sb0
special exception, the source code distributed need not include\sa0\par\fi0\sb0
anything that is normally distributed (in either source or binary\sa0\par\fi0\sb0
form) with the major components (compiler, kernel, and so on) of the\sa0\par\fi0\sb0
operating system on which the executable runs, unless that component\sa0\par\fi0\sb0
itself accompanies the executable.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If distribution of executable or object code is made by offering\sa0\par\fi0\sb0
access to copy from a designated place, then offering equivalent\sa0\par\fi0\sb0
access to copy the source code from the same place counts as\sa0\par\fi0\sb0
distribution of the source code, even though third parties are not\sa0\par\fi0\sb0
compelled to copy the source along with the object code.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  4. You may not copy, modify, sublicense, or distribute the Program\sa0\par\fi0\sb0
except as expressly provided under this License.  Any attempt\sa0\par\fi0\sb0
otherwise to copy, modify, sublicense or distribute the Program is\sa0\par\fi0\sb0
void, and will automatically terminate your rights under this License.\sa0\par\fi0\sb0
However, parties who have received copies, or rights, from you under\sa0\par\fi0\sb0
this License will not have their licenses terminated so long as such\sa0\par\fi0\sb0
parties remain in full compliance.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  5. You are not required to accept this License, since you have not\sa0\par\fi0\sb0
signed it.  However, nothing else grants you permission to modify or\sa0\par\fi0\sb0
distribute the Program or its derivative works.  These actions are\sa0\par\fi0\sb0
prohibited by law if you do not accept this License.  Therefore, by\sa0\par\fi0\sb0
modifying or distributing the Program (or any work based on the\sa0\par\fi0\sb0
Program), you indicate your acceptance of this License to do so, and\sa0\par\fi0\sb0
all its terms and conditions for copying, distributing or modifying\sa0\par\fi0\sb0
the Program or works based on it.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  6. Each time you redistribute the Program (or any work based on the\sa0\par\fi0\sb0
Program), the recipient automatically receives a license from the\sa0\par\fi0\sb0
original licensor to copy, distribute or modify the Program subject to\sa0\par\fi0\sb0
these terms and conditions.  You may not impose any further\sa0\par\fi0\sb0
restrictions on the recipients' exercise of the rights granted herein.\sa0\par\fi0\sb0
You are not responsible for enforcing compliance by third parties to\sa0\par\fi0\sb0
this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  7. If, as a consequence of a court judgment or allegation of patent\sa0\par\fi0\sb0
infringement or for any other reason (not limited to patent issues),\sa0\par\fi0\sb0
conditions are imposed on you (whether by court order, agreement or\sa0\par\fi0\sb0
otherwise) that contradict the conditions of this License, they do not\sa0\par\fi0\sb0
excuse you from the conditions of this License.  If you cannot\sa0\par\fi0\sb0
distribute so as to satisfy simultaneously your obligations under this\sa0\par\fi0\sb0
License and any other pertinent obligations, then as a consequence you\sa0\par\fi0\sb0
may not distribute the Program at all.  For example, if a patent\sa0\par\fi0\sb0
license would not permit royalty-free redistribution of the Program by\sa0\par\fi0\sb0
all those who receive copies directly or indirectly through you, then\sa0\par\fi0\sb0
the only way you could satisfy both it and this License would be to\sa0\par\fi0\sb0
refrain entirely from distribution of the Program.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If any portion of this section is held invalid or unenforceable under\sa0\par\fi0\sb0
any particular circumstance, the balance of the section is intended to\sa0\par\fi0\sb0
apply and the section as a whole is intended to apply in other\sa0\par\fi0\sb0
circumstances.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
It is not the purpose of this section to induce you to infringe any\sa0\par\fi0\sb0
patents or other property right claims or to contest validity of any\sa0\par\fi0\sb0
such claims; this section has the sole purpose of protecting the\sa0\par\fi0\sb0
integrity of the free software distribution system, which is\sa0\par\fi0\sb0
implemented by public license practices.  Many people have made\sa0\par\fi0\sb0
generous contributions to the wide range of software distributed\sa0\par\fi0\sb0
through that system in reliance on consistent application of that\sa0\par\fi0\sb0
system; it is up to the author/donor to decide if he or she is willing\sa0\par\fi0\sb0
to distribute software through any other system and a licensee cannot\sa0\par\fi0\sb0
impose that choice.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
This section is intended to make thoroughly clear what is believed to\sa0\par\fi0\sb0
be a consequence of the rest of this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  8. If the distribution and/or use of the Program is restricted in\sa0\par\fi0\sb0
certain countries either by patents or by copyrighted interfaces, the\sa0\par\fi0\sb0
original copyright holder who places the Program under this License\sa0\par\fi0\sb0
may add an explicit geographical distribution limitation excluding\sa0\par\fi0\sb0
those countries, so that distribution is permitted only in or among\sa0\par\fi0\sb0
countries not thus excluded.  In such case, this License incorporates\sa0\par\fi0\sb0
the limitation as if written in the body of this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  9. The Free Software Foundation may publish revised and/or new versions\sa0\par\fi0\sb0
of the General Public License from time to time.  Such new versions will\sa0\par\fi0\sb0
be similar in spirit to the present version, but may differ in detail to\sa0\par\fi0\sb0
address new problems or concerns.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Each version is given a distinguishing version number.  If the Program\sa0\par\fi0\sb0
specifies a version number of this License which applies to it and "any\sa0\par\fi0\sb0
later version", you have the option of following the terms and conditions\sa0\par\fi0\sb0
either of that version or of any later version published by the Free\sa0\par\fi0\sb0
Software Foundation.  If the Program does not specify a version number of\sa0\par\fi0\sb0
this License, you may choose any version ever published by the Free Software\sa0\par\fi0\sb0
Foundation.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  10. If you wish to incorporate parts of the Program into other free\sa0\par\fi0\sb0
programs whose distribution conditions are different, write to the author\sa0\par\fi0\sb0
to ask for permission.  For software which is copyrighted by the Free\sa0\par\fi0\sb0
Software Foundation, write to the Free Software Foundation; we sometimes\sa0\par\fi0\sb0
make exceptions for this.  Our decision will be guided by the two goals\sa0\par\fi0\sb0
of preserving the free status of all derivatives of our free software and\sa0\par\fi0\sb0
of promoting the sharing and reuse of software generally.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
                            NO WARRANTY\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\sa0\par\fi0\sb0
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\sa0\par\fi0\sb0
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\sa0\par\fi0\sb0
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\sa0\par\fi0\sb0
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\sa0\par\fi0\sb0
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\sa0\par\fi0\sb0
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\sa0\par\fi0\sb0
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\sa0\par\fi0\sb0
REPAIR OR CORRECTION.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\sa0\par\fi0\sb0
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\sa0\par\fi0\sb0
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\sa0\par\fi0\sb0
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\sa0\par\fi0\sb0
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\sa0\par\fi0\sb0
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\sa0\par\fi0\sb0
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\sa0\par\fi0\sb0
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\sa0\par\fi0\sb0
POSSIBILITY OF SUCH DAMAGES.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
                     END OF TERMS AND CONDITIONS\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
            How to Apply These Terms to Your New Programs\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  If you develop a new program, and you want it to be of the greatest\sa0\par\fi0\sb0
possible use to the public, the best way to achieve this is to make it\sa0\par\fi0\sb0
free software which everyone can redistribute and change under these terms.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  To do so, attach the following notices to the program.  It is safest\sa0\par\fi0\sb0
to attach them to the start of each source file to most effectively\sa0\par\fi0\sb0
convey the exclusion of warranty; and each file should have at least\sa0\par\fi0\sb0
the "copyright" line and a pointer to where the full notice is found.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    -one line to give the program's name and a brief idea of what it does.-\sa0\par\fi0\sb0
    Copyright (C) 19yy  -name of author-\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    This program is free software; you can redistribute it and/or modify\sa0\par\fi0\sb0
    it under the terms of the GNU General Public License as published by\sa0\par\fi0\sb0
    the Free Software Foundation; either version 2 of the License, or\sa0\par\fi0\sb0
    (at your option) any later version.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    This program is distributed in the hope that it will be useful,\sa0\par\fi0\sb0
    but WITHOUT ANY WARRANTY; without even the implied warranty of\sa0\par\fi0\sb0
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\sa0\par\fi0\sb0
    GNU General Public License for more details.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    You should have received a copy of the GNU General Public License\sa0\par\fi0\sb0
    along with this program; if not, write to the Free Software\sa0\par\fi0\sb0
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Also add information on how to contact you by electronic and paper mail.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If the program is interactive, make it output a short notice like this\sa0\par\fi0\sb0
when it starts in an interactive mode:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
    Gnomovision version 69, Copyright (C) 19yy name of author\sa0\par\fi0\sb0
    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\sa0\par\fi0\sb0
    This is free software, and you are welcome to redistribute it\sa0\par\fi0\sb0
    under certain conditions; type `show c' for details.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The hypothetical commands `show w' and `show c' should show the appropriate\sa0\par\fi0\sb0
parts of the General Public License.  Of course, the commands you use may\sa0\par\fi0\sb0
be called something other than `show w' and `show c'; they could even be\sa0\par\fi0\sb0
mouse-clicks or menu items--whatever suits your program.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You should also get your employer (if you work as a programmer) or your\sa0\par\fi0\sb0
school, if any, to sign a "copyright disclaimer" for the program, if\sa0\par\fi0\sb0
necessary.  Here is a sample; alter the names:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\sa0\par\fi0\sb0
  `Gnomovision' (which makes passes at compilers) written by James Hacker.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  -signature of Ty Coon-, 1 April 1989\sa0\par\fi0\sb0
  Ty Coon, President of Vice\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
This General Public License does not permit incorporating your program into\sa0\par\fi0\sb0
proprietary programs.  If your program is a subroutine library, you may\sa0\par\fi0\sb0
consider it more useful to permit linking proprietary applications with the\sa0\par\fi0\sb0
library.  If this is what you want to do, use the GNU Library General\sa0\par\fi0\sb0
Public License instead of this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  \hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix B. GNU Free Documentation License}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix B. GNU Free Documentation License}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart _538}{\*\bkmkend _538}\b\fs41\f1 Appendix B. GNU Free Documentation License \keepn\hyphpar0\par\pard\sb200\li960\sl234 \b0\fs18\f2                GNU Free Documentation License\sa0\par\fi0\sb0
                   Version 1.1, March 2000\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
 Copyright (C) 2000  Free Software Foundation, Inc.\sa0\par\fi0\sb0
     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\sa0\par\fi0\sb0
 Everyone is permitted to copy and distribute verbatim copies\sa0\par\fi0\sb0
 of this license document, but changing it is not allowed.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
0. PREAMBLE\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The purpose of this License is to make a manual, textbook, or other\sa0\par\fi0\sb0
written document "free" in the sense of freedom: to assure everyone\sa0\par\fi0\sb0
the effective freedom to copy and redistribute it, with or without\sa0\par\fi0\sb0
modifying it, either commercially or noncommercially.  Secondarily,\sa0\par\fi0\sb0
this License preserves for the author and publisher a way to get\sa0\par\fi0\sb0
credit for their work, while not being considered responsible for\sa0\par\fi0\sb0
modifications made by others.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
This License is a kind of "copyleft", which means that derivative\sa0\par\fi0\sb0
works of the document must themselves be free in the same sense.  It\sa0\par\fi0\sb0
complements the GNU General Public License, which is a copyleft\sa0\par\fi0\sb0
license designed for free software.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
We have designed this License in order to use it for manuals for free\sa0\par\fi0\sb0
software, because free software needs free documentation: a free\sa0\par\fi0\sb0
program should come with manuals providing the same freedoms that the\sa0\par\fi0\sb0
software does.  But this License is not limited to software manuals;\sa0\par\fi0\sb0
it can be used for any textual work, regardless of subject matter or\sa0\par\fi0\sb0
whether it is published as a printed book.  We recommend this License\sa0\par\fi0\sb0
principally for works whose purpose is instruction or reference.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
1. APPLICABILITY AND DEFINITIONS\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
This License applies to any manual or other work that contains a\sa0\par\fi0\sb0
notice placed by the copyright holder saying it can be distributed\sa0\par\fi0\sb0
under the terms of this License.  The "Document", below, refers to any\sa0\par\fi0\sb0
such manual or work.  Any member of the public is a licensee, and is\sa0\par\fi0\sb0
addressed as "you".\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
A "Modified Version" of the Document means any work containing the\sa0\par\fi0\sb0
Document or a portion of it, either copied verbatim, or with\sa0\par\fi0\sb0
modifications and/or translated into another language.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
A "Secondary Section" is a named appendix or a front-matter section of\sa0\par\fi0\sb0
the Document that deals exclusively with the relationship of the\sa0\par\fi0\sb0
publishers or authors of the Document to the Document's overall subject\sa0\par\fi0\sb0
(or to related matters) and contains nothing that could fall directly\sa0\par\fi0\sb0
within that overall subject.  (For example, if the Document is in part a\sa0\par\fi0\sb0
textbook of mathematics, a Secondary Section may not explain any\sa0\par\fi0\sb0
mathematics.)  The relationship could be a matter of historical\sa0\par\fi0\sb0
connection with the subject or with related matters, or of legal,\sa0\par\fi0\sb0
commercial, philosophical, ethical or political position regarding\sa0\par\fi0\sb0
them.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The "Invariant Sections" are certain Secondary Sections whose titles\sa0\par\fi0\sb0
are designated, as being those of Invariant Sections, in the notice\sa0\par\fi0\sb0
that says that the Document is released under this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The "Cover Texts" are certain short passages of text that are listed,\sa0\par\fi0\sb0
as Front-Cover Texts or Back-Cover Texts, in the notice that says that\sa0\par\fi0\sb0
the Document is released under this License.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
A "Transparent" copy of the Document means a machine-readable copy,\sa0\par\fi0\sb0
represented in a format whose specification is available to the\sa0\par\fi0\sb0
general public, whose contents can be viewed and edited directly and\sa0\par\fi0\sb0
straightforwardly with generic text editors or (for images composed of\sa0\par\fi0\sb0
pixels) generic paint programs or (for drawings) some widely available\sa0\par\fi0\sb0
drawing editor, and that is suitable for input to text formatters or\sa0\par\fi0\sb0
for automatic translation to a variety of formats suitable for input\sa0\par\fi0\sb0
to text formatters.  A copy made in an otherwise Transparent file\sa0\par\fi0\sb0
format whose markup has been designed to thwart or discourage\sa0\par\fi0\sb0
subsequent modification by readers is not Transparent.  A copy that is\sa0\par\fi0\sb0
not "Transparent" is called "Opaque".\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Examples of suitable formats for Transparent copies include plain\sa0\par\fi0\sb0
ASCII without markup, Texinfo input format, LaTeX input format, SGML\sa0\par\fi0\sb0
or XML using a publicly available DTD, and standard-conforming simple\sa0\par\fi0\sb0
HTML designed for human modification.  Opaque formats include\sa0\par\fi0\sb0
PostScript, PDF, proprietary formats that can be read and edited only\sa0\par\fi0\sb0
by proprietary word processors, SGML or XML for which the DTD and/or\sa0\par\fi0\sb0
processing tools are not generally available, and the\sa0\par\fi0\sb0
machine-generated HTML produced by some word processors for output\sa0\par\fi0\sb0
purposes only.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The "Title Page" means, for a printed book, the title page itself,\sa0\par\fi0\sb0
plus such following pages as are needed to hold, legibly, the material\sa0\par\fi0\sb0
this License requires to appear in the title page.  For works in\sa0\par\fi0\sb0
formats which do not have any title page as such, "Title Page" means\sa0\par\fi0\sb0
the text near the most prominent appearance of the work's title,\sa0\par\fi0\sb0
preceding the beginning of the body of the text.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
2. VERBATIM COPYING\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may copy and distribute the Document in any medium, either\sa0\par\fi0\sb0
commercially or noncommercially, provided that this License, the\sa0\par\fi0\sb0
copyright notices, and the license notice saying this License applies\sa0\par\fi0\sb0
to the Document are reproduced in all copies, and that you add no other\sa0\par\fi0\sb0
conditions whatsoever to those of this License.  You may not use\sa0\par\fi0\sb0
technical measures to obstruct or control the reading or further\sa0\par\fi0\sb0
copying of the copies you make or distribute.  However, you may accept\sa0\par\fi0\sb0
compensation in exchange for copies.  If you distribute a large enough\sa0\par\fi0\sb0
number of copies you must also follow the conditions in section 3.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may also lend copies, under the same conditions stated above, and\sa0\par\fi0\sb0
you may publicly display copies.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
3. COPYING IN QUANTITY\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If you publish printed copies of the Document numbering more than 100,\sa0\par\fi0\sb0
and the Document's license notice requires Cover Texts, you must enclose\sa0\par\fi0\sb0
the copies in covers that carry, clearly and legibly, all these Cover\sa0\par\fi0\sb0
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on\sa0\par\fi0\sb0
the back cover.  Both covers must also clearly and legibly identify\sa0\par\fi0\sb0
you as the publisher of these copies.  The front cover must present\sa0\par\fi0\sb0
the full title with all words of the title equally prominent and\sa0\par\fi0\sb0
visible.  You may add other material on the covers in addition.\sa0\par\fi0\sb0
Copying with changes limited to the covers, as long as they preserve\sa0\par\fi0\sb0
the title of the Document and satisfy these conditions, can be treated\sa0\par\fi0\sb0
as verbatim copying in other respects.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If the required texts for either cover are too voluminous to fit\sa0\par\fi0\sb0
legibly, you should put the first ones listed (as many as fit\sa0\par\fi0\sb0
reasonably) on the actual cover, and continue the rest onto adjacent\sa0\par\fi0\sb0
pages.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If you publish or distribute Opaque copies of the Document numbering\sa0\par\fi0\sb0
more than 100, you must either include a machine-readable Transparent\sa0\par\fi0\sb0
copy along with each Opaque copy, or state in or with each Opaque copy\sa0\par\fi0\sb0
a publicly-accessible computer-network location containing a complete\sa0\par\fi0\sb0
Transparent copy of the Document, free of added material, which the\sa0\par\fi0\sb0
general network-using public has access to download anonymously at no\sa0\par\fi0\sb0
charge using public-standard network protocols.  If you use the latter\sa0\par\fi0\sb0
option, you must take reasonably prudent steps, when you begin\sa0\par\fi0\sb0
distribution of Opaque copies in quantity, to ensure that this\sa0\par\fi0\sb0
Transparent copy will remain thus accessible at the stated location\sa0\par\fi0\sb0
until at least one year after the last time you distribute an Opaque\sa0\par\fi0\sb0
copy (directly or through your agents or retailers) of that edition to\sa0\par\fi0\sb0
the public.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
It is requested, but not required, that you contact the authors of the\sa0\par\fi0\sb0
Document well before redistributing any large number of copies, to give\sa0\par\fi0\sb0
them a chance to provide you with an updated version of the Document.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
4. MODIFICATIONS\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may copy and distribute a Modified Version of the Document under\sa0\par\fi0\sb0
the conditions of sections 2 and 3 above, provided that you release\sa0\par\fi0\sb0
the Modified Version under precisely this License, with the Modified\sa0\par\fi0\sb0
Version filling the role of the Document, thus licensing distribution\sa0\par\fi0\sb0
and modification of the Modified Version to whoever possesses a copy\sa0\par\fi0\sb0
of it.  In addition, you must do these things in the Modified Version:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
A. Use in the Title Page (and on the covers, if any) a title distinct\sa0\par\fi0\sb0
   from that of the Document, and from those of previous versions\sa0\par\fi0\sb0
   (which should, if there were any, be listed in the History section\sa0\par\fi0\sb0
   of the Document).  You may use the same title as a previous version\sa0\par\fi0\sb0
   if the original publisher of that version gives permission.\sa0\par\fi0\sb0
B. List on the Title Page, as authors, one or more persons or entities\sa0\par\fi0\sb0
   responsible for authorship of the modifications in the Modified\sa0\par\fi0\sb0
   Version, together with at least five of the principal authors of the\sa0\par\fi0\sb0
   Document (all of its principal authors, if it has less than five).\sa0\par\fi0\sb0
C. State on the Title page the name of the publisher of the\sa0\par\fi0\sb0
   Modified Version, as the publisher.\sa0\par\fi0\sb0
D. Preserve all the copyright notices of the Document.\sa0\par\fi0\sb0
E. Add an appropriate copyright notice for your modifications\sa0\par\fi0\sb0
   adjacent to the other copyright notices.\sa0\par\fi0\sb0
F. Include, immediately after the copyright notices, a license notice\sa0\par\fi0\sb0
   giving the public permission to use the Modified Version under the\sa0\par\fi0\sb0
   terms of this License, in the form shown in the Addendum below.\sa0\par\fi0\sb0
G. Preserve in that license notice the full lists of Invariant Sections\sa0\par\fi0\sb0
   and required Cover Texts given in the Document's license notice.\sa0\par\fi0\sb0
H. Include an unaltered copy of this License.\sa0\par\fi0\sb0
I. Preserve the section entitled "History", and its title, and add to\sa0\par\fi0\sb0
   it an item stating at least the title, year, new authors, and\sa0\par\fi0\sb0
   publisher of the Modified Version as given on the Title Page.  If\sa0\par\fi0\sb0
   there is no section entitled "History" in the Document, create one\sa0\par\fi0\sb0
   stating the title, year, authors, and publisher of the Document as\sa0\par\fi0\sb0
   given on its Title Page, then add an item describing the Modified\sa0\par\fi0\sb0
   Version as stated in the previous sentence.\sa0\par\fi0\sb0
J. Preserve the network location, if any, given in the Document for\sa0\par\fi0\sb0
   public access to a Transparent copy of the Document, and likewise\sa0\par\fi0\sb0
   the network locations given in the Document for previous versions\sa0\par\fi0\sb0
   it was based on.  These may be placed in the "History" section.\sa0\par\fi0\sb0
   You may omit a network location for a work that was published at\sa0\par\fi0\sb0
   least four years before the Document itself, or if the original\sa0\par\fi0\sb0
   publisher of the version it refers to gives permission.\sa0\par\fi0\sb0
K. In any section entitled "Acknowledgements" or "Dedications",\sa0\par\fi0\sb0
   preserve the section's title, and preserve in the section all the\sa0\par\fi0\sb0
   substance and tone of each of the contributor acknowledgements\sa0\par\fi0\sb0
   and/or dedications given therein.\sa0\par\fi0\sb0
L. Preserve all the Invariant Sections of the Document,\sa0\par\fi0\sb0
   unaltered in their text and in their titles.  Section numbers\sa0\par\fi0\sb0
   or the equivalent are not considered part of the section titles.\sa0\par\fi0\sb0
M. Delete any section entitled "Endorsements".  Such a section\sa0\par\fi0\sb0
   may not be included in the Modified Version.\sa0\par\fi0\sb0
N. Do not retitle any existing section as "Endorsements"\sa0\par\fi0\sb0
   or to conflict in title with any Invariant Section.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If the Modified Version includes new front-matter sections or\sa0\par\fi0\sb0
appendices that qualify as Secondary Sections and contain no material\sa0\par\fi0\sb0
copied from the Document, you may at your option designate some or all\sa0\par\fi0\sb0
of these sections as invariant.  To do this, add their titles to the\sa0\par\fi0\sb0
list of Invariant Sections in the Modified Version's license notice.\sa0\par\fi0\sb0
These titles must be distinct from any other section titles.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may add a section entitled "Endorsements", provided it contains\sa0\par\fi0\sb0
nothing but endorsements of your Modified Version by various\sa0\par\fi0\sb0
parties--for example, statements of peer review or that the text has\sa0\par\fi0\sb0
been approved by an organization as the authoritative definition of a\sa0\par\fi0\sb0
standard.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may add a passage of up to five words as a Front-Cover Text, and a\sa0\par\fi0\sb0
passage of up to 25 words as a Back-Cover Text, to the end of the list\sa0\par\fi0\sb0
of Cover Texts in the Modified Version.  Only one passage of\sa0\par\fi0\sb0
Front-Cover Text and one of Back-Cover Text may be added by (or\sa0\par\fi0\sb0
through arrangements made by) any one entity.  If the Document already\sa0\par\fi0\sb0
includes a cover text for the same cover, previously added by you or\sa0\par\fi0\sb0
by arrangement made by the same entity you are acting on behalf of,\sa0\par\fi0\sb0
you may not add another; but you may replace the old one, on explicit\sa0\par\fi0\sb0
permission from the previous publisher that added the old one.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The author(s) and publisher(s) of the Document do not by this License\sa0\par\fi0\sb0
give permission to use their names for publicity for or to assert or\sa0\par\fi0\sb0
imply endorsement of any Modified Version.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
5. COMBINING DOCUMENTS\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may combine the Document with other documents released under this\sa0\par\fi0\sb0
License, under the terms defined in section 4 above for modified\sa0\par\fi0\sb0
versions, provided that you include in the combination all of the\sa0\par\fi0\sb0
Invariant Sections of all of the original documents, unmodified, and\sa0\par\fi0\sb0
list them all as Invariant Sections of your combined work in its\sa0\par\fi0\sb0
license notice.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The combined work need only contain one copy of this License, and\sa0\par\fi0\sb0
multiple identical Invariant Sections may be replaced with a single\sa0\par\fi0\sb0
copy.  If there are multiple Invariant Sections with the same name but\sa0\par\fi0\sb0
different contents, make the title of each such section unique by\sa0\par\fi0\sb0
adding at the end of it, in parentheses, the name of the original\sa0\par\fi0\sb0
author or publisher of that section if known, or else a unique number.\sa0\par\fi0\sb0
Make the same adjustment to the section titles in the list of\sa0\par\fi0\sb0
Invariant Sections in the license notice of the combined work.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
In the combination, you must combine any sections entitled "History"\sa0\par\fi0\sb0
in the various original documents, forming one section entitled\sa0\par\fi0\sb0
"History"; likewise combine any sections entitled "Acknowledgements",\sa0\par\fi0\sb0
and any sections entitled "Dedications".  You must delete all sections\sa0\par\fi0\sb0
entitled "Endorsements."\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
6. COLLECTIONS OF DOCUMENTS\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may make a collection consisting of the Document and other documents\sa0\par\fi0\sb0
released under this License, and replace the individual copies of this\sa0\par\fi0\sb0
License in the various documents with a single copy that is included in\sa0\par\fi0\sb0
the collection, provided that you follow the rules of this License for\sa0\par\fi0\sb0
verbatim copying of each of the documents in all other respects.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may extract a single document from such a collection, and distribute\sa0\par\fi0\sb0
it individually under this License, provided you insert a copy of this\sa0\par\fi0\sb0
License into the extracted document, and follow this License in all\sa0\par\fi0\sb0
other respects regarding verbatim copying of that document.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
7. AGGREGATION WITH INDEPENDENT WORKS\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
A compilation of the Document or its derivatives with other separate\sa0\par\fi0\sb0
and independent documents or works, in or on a volume of a storage or\sa0\par\fi0\sb0
distribution medium, does not as a whole count as a Modified Version\sa0\par\fi0\sb0
of the Document, provided no compilation copyright is claimed for the\sa0\par\fi0\sb0
compilation.  Such a compilation is called an "aggregate", and this\sa0\par\fi0\sb0
License does not apply to the other self-contained works thus compiled\sa0\par\fi0\sb0
with the Document, on account of their being thus compiled, if they\sa0\par\fi0\sb0
are not themselves derivative works of the Document.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If the Cover Text requirement of section 3 is applicable to these\sa0\par\fi0\sb0
copies of the Document, then if the Document is less than one quarter\sa0\par\fi0\sb0
of the entire aggregate, the Document's Cover Texts may be placed on\sa0\par\fi0\sb0
covers that surround only the Document within the aggregate.\sa0\par\fi0\sb0
Otherwise they must appear on covers around the whole aggregate.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
8. TRANSLATION\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Translation is considered a kind of modification, so you may\sa0\par\fi0\sb0
distribute translations of the Document under the terms of section 4.\sa0\par\fi0\sb0
Replacing Invariant Sections with translations requires special\sa0\par\fi0\sb0
permission from their copyright holders, but you may include\sa0\par\fi0\sb0
translations of some or all Invariant Sections in addition to the\sa0\par\fi0\sb0
original versions of these Invariant Sections.  You may include a\sa0\par\fi0\sb0
translation of this License provided that you also include the\sa0\par\fi0\sb0
original English version of this License.  In case of a disagreement\sa0\par\fi0\sb0
between the translation and the original English version of this\sa0\par\fi0\sb0
License, the original English version will prevail.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
9. TERMINATION\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
You may not copy, modify, sublicense, or distribute the Document except\sa0\par\fi0\sb0
as expressly provided for under this License.  Any other attempt to\sa0\par\fi0\sb0
copy, modify, sublicense or distribute the Document is void, and will\sa0\par\fi0\sb0
automatically terminate your rights under this License.  However,\sa0\par\fi0\sb0
parties who have received copies, or rights, from you under this\sa0\par\fi0\sb0
License will not have their licenses terminated so long as such\sa0\par\fi0\sb0
parties remain in full compliance.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
10. FUTURE REVISIONS OF THIS LICENSE\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
The Free Software Foundation may publish new, revised versions\sa0\par\fi0\sb0
of the GNU Free Documentation License from time to time.  Such new\sa0\par\fi0\sb0
versions will be similar in spirit to the present version, but may\sa0\par\fi0\sb0
differ in detail to address new problems or concerns. See\sa0\par\fi0\sb0
http:///www.gnu.org/copyleft/.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Each version of the License is given a distinguishing version number.\sa0\par\fi0\sb0
If the Document specifies that a particular numbered version of this\sa0\par\fi0\sb0
License "or any later version" applies to it, you have the option of\sa0\par\fi0\sb0
following the terms and conditions either of that specified version or\sa0\par\fi0\sb0
of any later version that has been published (not as a draft) by the\sa0\par\fi0\sb0
Free Software Foundation.  If the Document does not specify a version\sa0\par\fi0\sb0
number of this License, you may choose any version ever published (not\sa0\par\fi0\sb0
as a draft) by the Free Software Foundation.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
ADDENDUM: How to use this License for your documents\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
To use this License in a document you have written, include a copy of\sa0\par\fi0\sb0
the License in the document and put the following copyright and\sa0\par\fi0\sb0
license notices just after the title page:\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
      Copyright (c)  YEAR  YOUR NAME.\sa0\par\fi0\sb0
      Permission is granted to copy, distribute and/or modify this document\sa0\par\fi0\sb0
      under the terms of the GNU Free Documentation License, Version 1.1\sa0\par\fi0\sb0
      or any later version published by the Free Software Foundation;\sa0\par\fi0\sb0
      with the Invariant Sections being LIST THEIR TITLES, with the\sa0\par\fi0\sb0
      Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.\sa0\par\fi0\sb0
      A copy of the license is included in the section entitled "GNU\sa0\par\fi0\sb0
      Free Documentation License".\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If you have no Invariant Sections, write "with no Invariant Sections"\sa0\par\fi0\sb0
instead of saying which ones are invariant.  If you have no\sa0\par\fi0\sb0
Front-Cover Texts, write "no Front-Cover Texts" instead of\sa0\par\fi0\sb0
"Front-Cover Texts being LIST"; likewise for Back-Cover Texts.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
If your document contains nontrivial examples of program code, we\sa0\par\fi0\sb0
recommend releasing these examples in parallel under your choice of\sa0\par\fi0\sb0
free software license, such as the GNU General Public License,\sa0\par\fi0\sb0
to permit their use in free software.\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
  \hyphpar0\par}
