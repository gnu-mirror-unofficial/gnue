<!--
  Inspired from a GPL project by V Trau 
       http://www.informatik.fh-wiesbaden.de/
  - ajitesh@gnue.org
-->

<!--
   XMLDBMS.dtd is for transferring database data to XML documents.
   A relational can be modeled as a hierarchy of depth four: 
   the database consists of a set of tables, which in turn consist of
   records, which in turn consist of fields. 
   We can model the database with a document node and its associated element node: 

   <!doctype name "url">
      <name>
             table1
             table2
             ...
             tablen
       </name> 

    The name is arbitrary. The url is optional, 
    but can be used to point to information about the database. We don't define
    what it points to. [Or should we?]  The order of the tables is also arbitrary, 
    since a relational database defines no ordering on them. 
    The url can also be a JDBC resource string url 
-->

<!ELEMENT database (records)*> 
  <!ATTLIST database URL CDATA  #IMPLIED>

<!--
     Each table of the database is represented by an element node with the records 
     as its children: 

      <name>
             record1
             record2
             ...
             recordm
      </name> 

      The name is the name of the table. The order of the records is arbitrary, 
      since the relational data model defines no ordering on them.
      Query Data : specifies the query string if table is generated from a query
      PKEY is primary key for the table   
-->
<!ELEMENT table (record)*> 
    <!ATTLIST table QUERY CDATA  #IMPLIED> 
                     PKEY CDATA  #IMPLIED>

<!--
    A record is also represented by an element node, with its fields as children: 

    <name>
             field1
             field2
             ...
             fieldm
     </name> 

     { The name is arbitrary, since the relational data model doesn't define a name 
       for a record type. However, in XML it cannot be omitted. One scheme is to 
       re-use the name of the table, or, if the table has a name that is a plural, to use the
       singular form (`persons' -> `person', `parts' -> `part'). } 
     The order of the fields is again immaterial. 
     Every record/tuple is represented as an element. The user can choose the name of this 
     element, the default name is record. If applicable, users may choose to use a 
     table name. Its content is a sequence of elements corresponding to the individual 
     fields. If null values are discarded, those fields which are nullable are optional.
     The value of the attribute KEY is the key for that element. It may be the value of 
     one column of this record or the concatenation of several coulmns. The value of the 
     attribute FORKEY is a list of the foreign keys used in this record. Currently it is 
     not clear what the keys of a record of the result set of an abitrary query are. 
  
-->
<!ELEMENT record (FieldName, NullableFieldName?, ... )
    <!ATTLIST record KEY ID  #REQUIRED
                  FORKEY IDREFS #IMPLIED>

<!--
   Each field in a record is represented as an individual element type. 
   The name depends on the system settings. If the field value is stored in an 
   external entity the content is EMPTY otherwise it is either CharData or CDSect 
   depending on the database type of the field. 
   Fields stored in external entities must have an attribute HREF.
   For any field value is #pcdata 
   for key it is ID 
   for forkey (foreigh key ) it is IDREF
-->

 <!ELEMENT FieldName (InternalFieldName | ExternalFieldName )>

 <!ELEMENT ExternalFieldName EMPTY>
 <!ATTLIST FieldName HREF CDATA  #IMPLIED>


 <!ELEMENT InternalFieldName (#PCDATA | ID | IDREF)>
    <!ATTLIST InternalFieldName TYPE (TYPE1 | TYPE2 | ....)  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName NULLABLE (true | false)  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName ISNULL (true | false)  #IMPLIED  "Default value"> 
    <!ATTLIST InternalFieldName ACCESS (R | RW)  #FIXED> 
    <!ATTLIST InternalFieldName CASESENSITIVE (true | false)  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName PRECISION CDATA  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName AUTOINCREMENT (true | false)  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName CURRENCY (true | false)  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName ENCODING CDATA  #FIXED  "base64"> 
    <!ATTLIST InternalFieldName SCALE CDATA  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName MAXLEN CDATA  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName SIGNED (true | false)  #FIXED  "Default value"> 
    <!ATTLIST InternalFieldName HREF CDATA  #IMPLIED> 
    <!ATTLIST InternalFieldName NAME CDATA  #FIXED  "Default value">
    <!ATTLIST InternalFieldName ISKEY (true|false) #FIXED "default value">
